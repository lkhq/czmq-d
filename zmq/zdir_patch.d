/*  =========================================================================
    zdir_patch - work with directory patches

    Copyright (c) the Contributors as noted in the AUTHORS file.
    This file is part of CZMQ, the high-level C binding for 0MQ:
    http://czmq.zeromq.org.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.
    =========================================================================
*/

public import c.zmq.czmq_library;

extern (C):

// un-namespaced enumeration values
enum patch_create = ZDIR_PATCH_CREATE;
enum patch_delete = ZDIR_PATCH_DELETE;

//  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
//  @warning Please edit the model at "api/zdir_patch.api" to make changes.
//  @interface
//  This is a stable class, and may not change except for emergencies. It
//  is provided in stable builds.
enum ZDIR_PATCH_CREATE = 1; // Creates a new file
enum ZDIR_PATCH_DELETE = 2; // Delete a file

//  Create new patch
zdir_patch_t* zdir_patch_new (
    const(char)* path,
    zfile_t* file,
    int op,
    const(char)* alias_);

//  Destroy a patch
void zdir_patch_destroy (zdir_patch_t** self_p);

//  Create copy of a patch. If the patch is null, or memory was exhausted,
//  returns null.                                                         
//  Caller owns return value and must destroy it when done.
zdir_patch_t* zdir_patch_dup (zdir_patch_t* self);

//  Return patch file directory path
const(char)* zdir_patch_path (zdir_patch_t* self);

//  Return patch file item
zfile_t* zdir_patch_file (zdir_patch_t* self);

//  Return operation
int zdir_patch_op (zdir_patch_t* self);

//  Return patch virtual file path
const(char)* zdir_patch_vpath (zdir_patch_t* self);

//  Calculate hash digest for file (create only)
void zdir_patch_digest_set (zdir_patch_t* self);

//  Return hash digest for patch file
const(char)* zdir_patch_digest (zdir_patch_t* self);

//  Self test of this class.
void zdir_patch_test (bool verbose);

//  @end

