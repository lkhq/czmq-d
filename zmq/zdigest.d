/*  =========================================================================
    zdigest - provides hashing functions (SHA-1 at present)

    Copyright (c) the Contributors as noted in the AUTHORS file.
    This file is part of CZMQ, the high-level C binding for 0MQ:
    http://czmq.zeromq.org.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.
    =========================================================================
*/

public import c.zmq.czmq_library;

extern (C):

//  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
//  @warning Please edit the model at "api/zdigest.api" to make changes.
//  @interface
//  This is a stable class, and may not change except for emergencies. It
//  is provided in stable builds.
//  Constructor - creates new digest object, which you use to build up a
//  digest by repeatedly calling zdigest_update() on chunks of data.    
zdigest_t* zdigest_new ();

//  Destroy a digest object
void zdigest_destroy (zdigest_t** self_p);

//  Add buffer into digest calculation
void zdigest_update (zdigest_t* self, const(ubyte)* buffer, size_t length);

//  Return final digest hash data. If built without crypto support,
//  returns NULL.                                                  
const(ubyte)* zdigest_data (zdigest_t* self);

//  Return final digest hash size
size_t zdigest_size (zdigest_t* self);

//  Return digest as printable hex string; caller should not modify nor   
//  free this string. After calling this, you may not use zdigest_update()
//  on the same digest. If built without crypto support, returns NULL.    
char* zdigest_string (zdigest_t* self);

//  Self test of this class.
void zdigest_test (bool verbose);

//  @end

